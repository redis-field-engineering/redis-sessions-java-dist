version: '3.7'

services:
  redis:
    image: redis/redis-stack-server
    ports:
      - 6379:6379
  postgres:
    image: postgres:latest
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - ~/postgres_data:/var/lib/postgresql/data    
  frontend:
    image: frontend
#    environment:
#      - "REACT_PROXY_ENDPOINT=http://host.docker.internal:8080"
    build: 
      context: ./frontend
    ports:
      - 80:80
    links:
      - backend
      - grafana
    depends_on:
      - backend
      - grafana
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
  backend:
    build:
      context: .
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - redis
      - postgres
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - backend
    links:
      - backend
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SERVER_ROOT_URL=http://grafana:3000/grafana
      - GF_SERVER_DOMAIN=grafana
      - GF_LOG_LEVEL=error
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
    links:
      - prometheus
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  prometheus-data:
# volumes:
#   postgres_data:
